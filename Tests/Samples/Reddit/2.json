{"kind": "Listing", "data": {"modhash": "rq4wc6z94f7548c47a1f3a0058fa4a230e8201d4226563d7d4", "children": [{"kind": "t3", "data": {"domain": "self.PHP", "banned_by": null, "media_embed": {}, "subreddit": "PHP", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;/p&gt;\n\n&lt;p&gt;I was thinking about this a while ago. Lets assume we have an array like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$data = array(&amp;#39;key&amp;#39; =&amp;gt; 100, &amp;#39;other_key&amp;#39; =&amp;gt; 400, &amp;#39;yet_another&amp;#39; =&amp;gt; 500, &amp;#39;baz&amp;#39; =&amp;gt; 0, &amp;#39;foo&amp;#39; =&amp;gt; 0, &amp;#39;bar&amp;#39; =&amp;gt; 40);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In order for the app to work properly, we need that all the keys are set. So The idea is to do a check, mostly like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (!isset($data[&amp;#39;key&amp;#39;]) || !isset($data[&amp;#39;otherKey&amp;#39;]) || !isset($data[&amp;#39;yet_another&amp;#39;])) || .......)\n    throw new InvalidArgumentException(&amp;#39;The data given is invalid&amp;#39;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In my opinion an if statement that long doesnt look that great, and what if the array has +10 keys? We wind up with a very long if statement.. right?&lt;/p&gt;\n\n&lt;p&gt;So what other options do we have? A foreach loop?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$neededKeys = array(&amp;#39;key&amp;#39;, &amp;#39;other_key&amp;#39;, &amp;#39;yet_another&amp;#39;, &amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;);\nforeach($neededKeys as $key)\n{\n    if (!isset($data[$key]))\n        throw new Exception(&amp;#39;Invalid Data&amp;#39;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What else? Perhaps doing a diff?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$neededKeys = array(&amp;#39;key&amp;#39;, &amp;#39;other_key&amp;#39;, &amp;#39;yet_another&amp;#39;, &amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;);\n$diff = array_diff_key($data, array_flip($neededKeys));\nif (!empty($diff))\n    throw new Exception(&amp;#39;Invalid Data&amp;#39;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or maybe doing a merge with default values, and dealing with invalid data later?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$defaultData = array(&amp;#39;key&amp;#39; =&amp;gt; 0, &amp;#39;other_key&amp;#39; =&amp;gt; 0, &amp;#39;yet_another&amp;#39; =&amp;gt; 0, &amp;#39;baz&amp;#39; =&amp;gt; 0, &amp;#39;foo&amp;#39; =&amp;gt; 0, &amp;#39;bar&amp;#39; =&amp;gt; 0);\n$data = array_merge($defaultData, $data);\n..........\nif (!$data[&amp;#39;foo&amp;#39;])\n    throw new Exception(&amp;#39;Invalid Data&amp;#39;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any other ideas? &lt;/p&gt;\n\n&lt;p&gt;How do you guys deal with arrays that have a bunch of keys and all (or most) of them are needed?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi!\n\nI was thinking about this a while ago. Lets assume we have an array like this:\n\n    $data = array('key' =&gt; 100, 'other_key' =&gt; 400, 'yet_another' =&gt; 500, 'baz' =&gt; 0, 'foo' =&gt; 0, 'bar' =&gt; 40);\n\nIn order for the app to work properly, we need that all the keys are set. So The idea is to do a check, mostly like:\n\n    if (!isset($data['key']) || !isset($data['otherKey']) || !isset($data['yet_another'])) || .......)\n        throw new InvalidArgumentException('The data given is invalid');\n\nIn my opinion an if statement that long doesnt look that great, and what if the array has +10 keys? We wind up with a very long if statement.. right?\n\nSo what other options do we have? A foreach loop?\n\n    $neededKeys = array('key', 'other_key', 'yet_another', 'foo', 'bar', 'baz');\n    foreach($neededKeys as $key)\n    {\n        if (!isset($data[$key]))\n            throw new Exception('Invalid Data');\n    }\n\nWhat else? Perhaps doing a diff?\n\n    $neededKeys = array('key', 'other_key', 'yet_another', 'foo', 'bar', 'baz');\n    $diff = array_diff_key($data, array_flip($neededKeys));\n    if (!empty($diff))\n        throw new Exception('Invalid Data');\n\nOr maybe doing a merge with default values, and dealing with invalid data later?\n\n    $defaultData = array('key' =&gt; 0, 'other_key' =&gt; 0, 'yet_another' =&gt; 0, 'baz' =&gt; 0, 'foo' =&gt; 0, 'bar' =&gt; 0);\n    $data = array_merge($defaultData, $data);\n    ..........\n    if (!$data['foo'])\n        throw new Exception('Invalid Data');\n\nAny other ideas? \n\nHow do you guys deal with arrays that have a bunch of keys and all (or most) of them are needed?", "likes": true, "link_flair_text": null, "id": "16vx8r", "clicked": false, "title": "Best Way to check for multiple array Keys?", "num_comments": 12, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh38", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": true, "permalink": "/r/PHP/comments/16vx8r/best_way_to_check_for_multiple_array_keys/", "name": "t3_16vx8r", "created": 1358649610.0, "url": "http://www.reddit.com/r/PHP/comments/16vx8r/best_way_to_check_for_multiple_array_keys/", "author_flair_text": null, "author": "mpratt", "created_utc": 1358620810.0, "media": null, "num_reports": null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I wrote a simple life streaming library in PHP. Do you \nhave any thoughts on how to improve it?", "banned_by": null, "link_id": "t3_124kq1", "likes": true, "replies": null, "id": "c6sjst2", "gilded": 0, "author": "mpratt", "parent_id": "t1_c6sbswz", "approved_by": null, "body": "Great! Go crazy with it! And if/when you find bugs send me a pull request!\n\nOfftopic: I still dont know how to merge pull requests on github, I havent used that functionality yet :(\n\nforever-alone-php-programmer.jpg", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great! Go crazy with it! And if/when you find bugs send me a pull request!&lt;/p&gt;\n\n&lt;p&gt;Offtopic: I still dont know how to merge pull requests on github, I havent used that functionality yet :(&lt;/p&gt;\n\n&lt;p&gt;forever-alone-php-programmer.jpg&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c6sjst2", "created": 1351361997.0, "author_flair_text": null, "created_utc": 1351358397.0, "num_reports": null, "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I wrote a simple life streaming library in PHP. Do you \nhave any thoughts on how to improve it?", "banned_by": null, "link_id": "t3_124kq1", "likes": true, "replies": null, "id": "c6sjq9z", "gilded": 0, "author": "mpratt", "parent_id": "t1_c6sb87i", "approved_by": null, "body": "Ive been thinking about it and you are completely right! Maybe next week, If I manage to finish some work related stuff, Ill get into making more tests and being more flexible in regards to stream wrappers.", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ive been thinking about it and you are completely right! Maybe next week, If I manage to finish some work related stuff, Ill get into making more tests and being more flexible in regards to stream wrappers.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c6sjq9z", "created": 1351361646.0, "author_flair_text": null, "created_utc": 1351358046.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I wrote a simple life streaming library in PHP. Do you \nhave any thoughts on how to improve it?", "banned_by": null, "link_id": "t3_124kq1", "likes": true, "replies": null, "id": "c6sjngu", "gilded": 0, "author": "mpratt", "parent_id": "t1_c6sb60v", "approved_by": null, "body": "Thanks! I dont have that much experience with composer. Im going to look further into it and see if I can implement that in the code.", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks! I dont have that much experience with composer. Im going to look further into it and see if I can implement that in the code.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c6sjngu", "created": 1351361249.0, "author_flair_text": null, "created_utc": 1351357649.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I wrote a simple life streaming library in PHP. Do you \nhave any thoughts on how to improve it?", "banned_by": null, "link_id": "t3_124kq1", "likes": true, "replies": null, "id": "c6s42ep", "gilded": 0, "author": "mpratt", "parent_id": "t1_c6s3o0i", "approved_by": null, "body": "I was not familiar with LifePress, but from what I can see it depends on CodeIgniter and one of the goals of my library was to be \"Framework-independent\". \n\nI dont know how LifePress displays the data, but other goal I had, was not to mess with html output (forcing tables or lists onto the user). My library returns only an array with the data fetched, letting the user play and decide how to display it on their application.\n\nIm certainly going to check out LifePress and try to learn something from it.", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was not familiar with LifePress, but from what I can see it depends on CodeIgniter and one of the goals of my library was to be &amp;quot;Framework-independent&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;I dont know how LifePress displays the data, but other goal I had, was not to mess with html output (forcing tables or lists onto the user). My library returns only an array with the data fetched, letting the user play and decide how to display it on their application.&lt;/p&gt;\n\n&lt;p&gt;Im certainly going to check out LifePress and try to learn something from it.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c6s42ep", "created": 1351271321.0, "author_flair_text": null, "created_utc": 1351267721.0, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "self.PHP", "banned_by": null, "media_embed": {}, "subreddit": "PHP", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Reddit! First poster here!&lt;/p&gt;\n\n&lt;p&gt;I wrote this library as a hobby a while back. Since I was not completely happy with it, I recently decided to rewrite some portions of it. I commited the changes and now I would love to hear some critique or suggestions from other fellow php coders.&lt;/p&gt;\n\n&lt;p&gt;It supports a couple of services but eventually I plan on supporting a couple more.&lt;/p&gt;\n\n&lt;p&gt;Check it out on Github &lt;a href=\"https://github.com/mpratt/The-Simple-LifeStream\"&gt;The Simple Life stream&lt;/a&gt; and tell me what you think!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi Reddit! First poster here!\n\nI wrote this library as a hobby a while back. Since I was not completely happy with it, I recently decided to rewrite some portions of it. I commited the changes and now I would love to hear some critique or suggestions from other fellow php coders.\n\nIt supports a couple of services but eventually I plan on supporting a couple more.\n\nCheck it out on Github [The Simple Life stream](https://github.com/mpratt/The-Simple-LifeStream) and tell me what you think!", "likes": true, "link_flair_text": null, "id": "124kq1", "clicked": false, "title": "I wrote a simple life streaming library in PHP. Do you \nhave any thoughts on how to improve it?", "num_comments": 15, "score": 39, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh38", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 5, "saved": false, "is_self": true, "permalink": "/r/PHP/comments/124kq1/i_wrote_a_simple_life_streaming_library_in_php_do/", "name": "t3_124kq1", "created": 1351268529.0, "url": "http://www.reddit.com/r/PHP/comments/124kq1/i_wrote_a_simple_life_streaming_library_in_php_do/", "author_flair_text": null, "author": "mpratt", "created_utc": 1351264929.0, "media": null, "num_reports": null, "ups": 44}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1o", "link_title": "Went for a hike and found some adorable. ", "banned_by": null, "link_id": "t3_103fz6", "likes": true, "replies": null, "id": "c6a9nqy", "gilded": 0, "author": "mpratt", "parent_id": "t1_c6a3vwe", "approved_by": null, "body": "Ah, ye ol' [Reddit switcharoo](http://www.reddit.com/r/funny/comments/103hdj/wifi_at_college/c6a77r1?context=2)!", "edited": false, "author_flair_css_class": null, "downs": 4, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, ye ol&amp;#39; &lt;a href=\"http://www.reddit.com/r/funny/comments/103hdj/wifi_at_college/c6a77r1?context=2\"&gt;Reddit switcharoo&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "aww", "name": "t1_c6a9nqy", "created": 1348030887.0, "author_flair_text": null, "created_utc": 1348027287.0, "num_reports": null, "ups": 9}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I needed to turn URLs into links in user generated content. This is what I came up with. Enjoy!", "banned_by": null, "link_id": "t3_v1vo6", "likes": true, "replies": null, "id": "c50zv2e", "gilded": 0, "author": "mpratt", "parent_id": "t3_v1vo6", "approved_by": null, "body": "I needed something similar for project of mine a while ago, what I came up with was this:\n\n    function autoLinkify_callback($matches)\n    {\n        $url = $matches[0];\n        if (strlen($url) &lt;= 10 || !parse_url($url) || !filter_var($url, FILTER_VALIDATE_URL))\n            return $url;\n\n        return sprintf('&lt;a href=\"%s\" rel=\"nofollow\"&gt;%s&lt;/a&gt;', $url, $url);\n    }\n\n    function autoLinkify($text)\n    {\n        return preg_replace_callback('~\\bhttp(s)?://([\\w#$%&amp;\\~/=?@\\/\\.])+\\b/?~i', 'autoLinkify_callback', $text);\n    }\n\n    $string = htmlspeciachars('Hi, I found this url http://www.example.bla/?id=9000', ENT_QUOTES, 'UTF-8');\n    echo autolinkify($string);", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I needed something similar for project of mine a while ago, what I came up with was this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function autoLinkify_callback($matches)\n{\n    $url = $matches[0];\n    if (strlen($url) &amp;lt;= 10 || !parse_url($url) || !filter_var($url, FILTER_VALIDATE_URL))\n        return $url;\n\n    return sprintf(&amp;#39;&amp;lt;a href=&amp;quot;%s&amp;quot; rel=&amp;quot;nofollow&amp;quot;&amp;gt;%s&amp;lt;/a&amp;gt;&amp;#39;, $url, $url);\n}\n\nfunction autoLinkify($text)\n{\n    return preg_replace_callback(&amp;#39;~\\bhttp(s)?://([\\w#$%&amp;amp;\\~/=?@\\/\\.])+\\b/?~i&amp;#39;, &amp;#39;autoLinkify_callback&amp;#39;, $text);\n}\n\n$string = htmlspeciachars(&amp;#39;Hi, I found this url http://www.example.bla/?id=9000&amp;#39;, ENT_QUOTES, &amp;#39;UTF-8&amp;#39;);\necho autolinkify($string);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c50zv2e", "created": 1339776956.0, "author_flair_text": null, "created_utc": 1339773356.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1u", "link_title": "Holy cow! The new Google doodle is a playable Moog synth!", "banned_by": null, "link_id": "t3_tzrfd", "likes": true, "replies": null, "id": "c4rhlkq", "gilded": 0, "author": "mpratt", "parent_id": "t3_tzrfd", "approved_by": null, "body": "[I think everyone around here knows this one](http://g.co/doodle/229w73)", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://g.co/doodle/229w73\"&gt;I think everyone around here knows this one&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "Music", "name": "t1_c4rhlkq", "created": 1337802104.0, "author_flair_text": null, "created_utc": 1337798504.0, "num_reports": null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh33", "link_title": "Everyone On Google Today ", "banned_by": null, "link_id": "t3_u0uld", "likes": true, "replies": null, "id": "c4rhe6a", "gilded": 0, "author": "mpratt", "parent_id": "t1_c4rd5wn", "approved_by": null, "body": "[I think everyone around here knows this one](http://g.co/doodle/229w73)", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://g.co/doodle/229w73\"&gt;I think everyone around here knows this one&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "funny", "name": "t1_c4rhe6a", "created": 1337801241.0, "author_flair_text": null, "created_utc": 1337797641.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I would like some feedback on this php script I wrote. It can give classes and objects the functionality to edit, delete or create new methods.", "banned_by": null, "link_id": "t3_tz149", "likes": true, "replies": null, "id": "c4r2oki", "gilded": 0, "author": "mpratt", "parent_id": "t1_c4r1u0k", "approved_by": null, "body": "I think the [observer pattern](http://en.wikipedia.org/wiki/Observer_pattern) would be a better solution for what you want to do.\n\n", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think the &lt;a href=\"http://en.wikipedia.org/wiki/Observer_pattern\"&gt;observer pattern&lt;/a&gt; would be a better solution for what you want to do.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c4r2oki", "created": 1337717506.0, "author_flair_text": null, "created_utc": 1337713906.0, "num_reports": null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "Need a developer for an online ordering system for a restaurant.", "banned_by": null, "link_id": "t3_ty4lm", "likes": true, "replies": null, "id": "c4qyn2g", "gilded": 0, "author": "mpratt", "parent_id": "t1_c4quk2o", "approved_by": null, "body": "&gt;F. Copyright and Content Ownership\n&gt; \n&gt;We claim no intellectual property rights over the material you provide to the Service. Your profile and materials uploaded remain yours. However, by setting your pages to be viewed publicly, you agree to allow others to view your Content. By setting your repositories to be viewed publicly, you agree to allow others to view and fork your repositories.\n\n[Github Terms of Service](http://help.github.com/terms-of-service/)", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;F. Copyright and Content Ownership&lt;/p&gt;\n\n&lt;p&gt;We claim no intellectual property rights over the material you provide to the Service. Your profile and materials uploaded remain yours. However, by setting your pages to be viewed publicly, you agree to allow others to view your Content. By setting your repositories to be viewed publicly, you agree to allow others to view and fork your repositories.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"http://help.github.com/terms-of-service/\"&gt;Github Terms of Service&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c4qyn2g", "created": 1337698535.0, "author_flair_text": null, "created_utc": 1337694935.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "I would like some feedback on this php script I wrote. It can give classes and objects the functionality to edit, delete or create new methods.", "banned_by": null, "link_id": "t3_tz149", "likes": true, "replies": null, "id": "c4qyevr", "gilded": 0, "author": "mpratt", "parent_id": "t1_c4qxyb4", "approved_by": null, "body": "I could see it working like some kind of \"plug-in mechanism\", where other classes could register methods on runtime and extend the functionality of the object.\n\nOn the other hand, If I were looking for that kind of functionality, I would use a different approach, for example the mediator pattern. [IrcMaxell does a great job explaining how to implement \"plug-able\" classes on his blog](http://blog.ircmaxell.com/2012/03/handling-plugins-in-php.html).", "edited": 1337694054.0, "author_flair_css_class": null, "downs": 1, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I could see it working like some kind of &amp;quot;plug-in mechanism&amp;quot;, where other classes could register methods on runtime and extend the functionality of the object.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, If I were looking for that kind of functionality, I would use a different approach, for example the mediator pattern. &lt;a href=\"http://blog.ircmaxell.com/2012/03/handling-plugins-in-php.html\"&gt;IrcMaxell does a great job explaining how to implement &amp;quot;plug-able&amp;quot; classes on his blog&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c4qyevr", "created": 1337697053.0, "author_flair_text": null, "created_utc": 1337693453.0, "num_reports": null, "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "PSR-1 and PSR-2 to be Approved as Standards", "banned_by": null, "link_id": "t3_tyzcq", "likes": true, "replies": null, "id": "c4qybof", "gilded": 0, "author": "mpratt", "parent_id": "t1_c4qy5in", "approved_by": null, "body": "I also like to put braces on the next line in control structures, pretty much like [Allman's Style](http://en.wikipedia.org/wiki/Indent_style#Allman_style)", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I also like to put braces on the next line in control structures, pretty much like &lt;a href=\"http://en.wikipedia.org/wiki/Indent_style#Allman_style\"&gt;Allman&amp;#39;s Style&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c4qybof", "created": 1337696455.0, "author_flair_text": null, "created_utc": 1337692855.0, "num_reports": null, "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1e", "link_title": "Green Day lets a kid play LEAD guitar on Jesus of Suburbia at a concert in Chicago!", "banned_by": null, "link_id": "t3_tpjnm", "likes": true, "replies": null, "id": "c4op1ri", "gilded": 0, "author": "mpratt", "parent_id": "t3_tpjnm", "approved_by": null, "body": "[\"Hey Kid! Don't fuck it up!\"](http://www.youtube.com/watch?v=0UXvV5iS_eg&amp;feature=related#t=51s)", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.youtube.com/watch?v=0UXvV5iS_eg&amp;amp;feature=related#t=51s\"&gt;&amp;quot;Hey Kid! Don&amp;#39;t fuck it up!&amp;quot;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "videos", "name": "t1_c4op1ri", "created": 1337177087.0, "author_flair_text": null, "created_utc": 1337173487.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh38", "link_title": "Parsing Youtube links", "banned_by": null, "link_id": "t3_t662j", "likes": true, "replies": null, "id": "c4khrop", "gilded": 0, "author": "mpratt", "parent_id": "t3_t662j", "approved_by": null, "body": "Here is a regex-less alternative (at least for the most common cases):\n\n    $test = array('http://www.youtube.com/watch?feature=player_embedded&amp;v=EpzO9D3o8b4',\n              'http://www.youtube.com/watch?feature=player_embedded&amp;v=tN3F8pP5kx2&amp;foo=123',\n              '//www.youtube.com/watch?v=MU421T9Wpae&amp;feature=player_embedded',\n              'http://youtube.com/watch?v=ty89UzV4J3O',\n              'http://youtube.co.uk/watch?v=bmUv46n2J80',\n              'http://www.youtu.be/13n5Gkte72X',\n              'http://www.youtube.com/watch?feature=player_embedded&amp;v=C8Hoy729Z0L',\n              'https://youtube.com/watch?v=i6t1aOIlR4o');\n\n    function getVideoId($url)\n    {\n        $parsedUrl = parse_url($url);\n        if ($parsedUrl === false)\n            return false;\n\n        if (!empty($parsedUrl['query']))\n        {\n            $query = array();\n            parse_str($parsedUrl['query'], $query);\n            if (!empty($query['v']))\n                return $query['v'];\n        }\n\n        if (in_array(strtolower($parsedUrl['host']), array('youtu.be', 'www.youtu.be')))\n            return trim($parsedUrl['path'], '/');\n\n        return false;\n    }\n\n    foreach ($test as $url)\n    {\n        echo getVideoId($url) . PHP_EOL;\n    }", "edited": false, "author_flair_css_class": null, "downs": 0, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is a regex-less alternative (at least for the most common cases):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$test = array(&amp;#39;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=EpzO9D3o8b4&amp;#39;,\n          &amp;#39;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=tN3F8pP5kx2&amp;amp;foo=123&amp;#39;,\n          &amp;#39;//www.youtube.com/watch?v=MU421T9Wpae&amp;amp;feature=player_embedded&amp;#39;,\n          &amp;#39;http://youtube.com/watch?v=ty89UzV4J3O&amp;#39;,\n          &amp;#39;http://youtube.co.uk/watch?v=bmUv46n2J80&amp;#39;,\n          &amp;#39;http://www.youtu.be/13n5Gkte72X&amp;#39;,\n          &amp;#39;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=C8Hoy729Z0L&amp;#39;,\n          &amp;#39;https://youtube.com/watch?v=i6t1aOIlR4o&amp;#39;);\n\nfunction getVideoId($url)\n{\n    $parsedUrl = parse_url($url);\n    if ($parsedUrl === false)\n        return false;\n\n    if (!empty($parsedUrl[&amp;#39;query&amp;#39;]))\n    {\n        $query = array();\n        parse_str($parsedUrl[&amp;#39;query&amp;#39;], $query);\n        if (!empty($query[&amp;#39;v&amp;#39;]))\n            return $query[&amp;#39;v&amp;#39;];\n    }\n\n    if (in_array(strtolower($parsedUrl[&amp;#39;host&amp;#39;]), array(&amp;#39;youtu.be&amp;#39;, &amp;#39;www.youtu.be&amp;#39;)))\n        return trim($parsedUrl[&amp;#39;path&amp;#39;], &amp;#39;/&amp;#39;);\n\n    return false;\n}\n\nforeach ($test as $url)\n{\n    echo getVideoId($url) . PHP_EOL;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "subreddit": "PHP", "name": "t1_c4khrop", "created": 1336253290.0, "author_flair_text": null, "created_utc": 1336249690.0, "num_reports": null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh33", "link_title": "Turtle Power!", "banned_by": null, "link_id": "t3_pkvoq", "likes": true, "replies": null, "id": "c3q8xhc", "gilded": 0, "author": "mpratt", "parent_id": "t3_pkvoq", "approved_by": null, "body": "[I like turtles](http://i.imgur.com/c4SDj.gif)", "edited": false, "author_flair_css_class": null, "downs": 2, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://i.imgur.com/c4SDj.gif\"&gt;I like turtles&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "subreddit": "funny", "name": "t1_c3q8xhc", "created": 1329000849.0, "author_flair_text": null, "created_utc": 1328997249.0, "num_reports": null, "ups": 3}}], "after": null, "before": null}}
